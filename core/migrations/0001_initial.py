# Generated by Django 5.1.1 on 2025-10-28 19:03

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ComparisonSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('target', models.CharField(max_length=50)),
                ('best_model', models.CharField(max_length=100)),
                ('best_r2', models.FloatField(blank=True, null=True)),
                ('best_mae', models.FloatField(blank=True, null=True)),
                ('best_rmse', models.FloatField(blank=True, null=True)),
                ('comparison_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Comparison Summary',
                'verbose_name_plural': 'Comparison Summaries',
                'db_table': 'comparison_summary',
            },
        ),
        migrations.CreateModel(
            name='ModelMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('model_name', models.CharField(max_length=100)),
                ('target', models.CharField(max_length=50)),
                ('r2_score', models.FloatField(blank=True, null=True)),
                ('mae', models.FloatField(blank=True, null=True)),
                ('rmse', models.FloatField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Model Metrics',
                'verbose_name_plural': 'Model Metrics',
                'db_table': 'model_metrics',
            },
        ),
        migrations.CreateModel(
            name='PlaceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fips', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=50)),
                ('population', models.IntegerField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField(default=2024)),
            ],
            options={
                'verbose_name': 'Place Record',
                'verbose_name_plural': 'Place Records',
                'db_table': 'place_record',
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('model_used', models.CharField(max_length=100)),
                ('target', models.CharField(max_length=50)),
                ('predicted_value', models.FloatField()),
                ('input_vector', models.JSONField()),
                ('prediction_date', models.DateTimeField(auto_now_add=True)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='core.placerecord')),
            ],
            options={
                'verbose_name': 'Prediction',
                'verbose_name_plural': 'Predictions',
                'db_table': 'prediction',
            },
        ),
    ]
